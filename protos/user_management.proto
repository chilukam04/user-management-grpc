syntax = "proto3";

package usermanagement;

import "google/protobuf/timestamp.proto";

// User profile definition
message UserProfile {
    string userId = 1;                     // Unique user ID
    string firstName = 2;                  // First name
    string lastName = 3;                   // Last name
    string email = 4;                      // Email address
    google.protobuf.Timestamp createdAt = 5; // Time of creation
    google.protobuf.Timestamp updatedAt = 6; // Time of last update
}

// Group definition
message Group {
    string groupId = 1;                    // Unique group ID
    string name = 2;                       // Group name
    string description = 3;                // Description of the group
}

// Request and response messages for CreateUser
message CreateUserRequest {
    UserProfile user = 1;                  // User to be created
}

message CreateUserResponse {
    UserProfile user = 1;                  // The created user
}

// Request and response messages for GetUser
message GetUserRequest {
    string userId = 1;                     // User ID to fetch
}

message GetUserResponse {
    UserProfile user = 1;                  // The fetched user
}

// Request and response messages for CreateGroup
message CreateGroupRequest {
    Group group = 1;                       // Group to be created
}

message CreateGroupResponse {
    Group group = 1;                       // The created group
}

// Request and response messages for GetGroup
message GetGroupRequest {
    string groupId = 1;                    // Group ID to fetch
}

message GetGroupResponse {
    Group group = 1;                       // The fetched group
}

// User Management service definition
service UserManagement {
    // Creates a new user
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);

    // Fetches a user by ID
    rpc GetUser (GetUserRequest) returns (GetUserResponse);

    // Creates a new group
    rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse);

    // Fetches a group by ID
    rpc GetGroup (GetGroupRequest) returns (GetGroupResponse);
}
